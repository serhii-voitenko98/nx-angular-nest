// Read more https://material.angular.io/guide/theming
@use '~@angular/material' as mat;

$my-primary: mat.define-palette(mat.$indigo-palette, 500);
$my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The "warn" palette is optional and defaults to red if not specified.
$my-warn: mat.define-palette(mat.$red-palette);

$my-theme: mat.define-light-theme((
  color: (
    primary: $my-primary,
    accent: $my-accent,
    warn: $my-warn,
  )
));

// Emit theme-dependent styles for common features used across multiple components.
//@include mat.core-theme($my-theme);

// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
//@include mat.button-theme($my-theme);

/*
  As an alternative to listing every component that your application uses, Angular Material offers Sass mixins that
  includes styles for all components in the library: all-component-colors, all-component-typographies,
  and all-component-themes.
*/
@include mat.all-component-themes($my-theme);
